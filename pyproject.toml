[ssrq.schema.meta]
authors = [
  "Bastian Politycki <bastian.politycki@unisg.ch>",
  "Pascale Sutter <pascale.sutter@unisg.ch>",
]
schemas = [
  {title = "SSRQ Editionsrichtlinien", description = "The main schema used by the Swiss Law Sources to validate TEI XML transcriptions", entry = "main.odd.xml", name = "TEI_Schema", version = "1.0.0-alpha.1", tei_version = "4.5.0"},
]

[tool.poetry]
authors = ["Bpolitycki <bastian.politycki@unisg.ch>"]
description = "TEI-ODD schema for the Swiss Law Sources with Python based tooling."
include = [
  {path = "src", format = [
    "sdist",
    "wheel",
  ]},
]
name = "ssrq-schema"
packages = [
  {include = "utils"},
]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
pydantic = "^2.4.1"
python = "^3.11"
requests = "^2.31.0"
saxonche = "^12.3.0"
saxonche-stubs = "^0.6.0"
semver = "^2.13.0"

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
pyschval = {git = "https://github.com/SSRQ-SDS-FDS/py-schematron-validator.git", rev = "main"}
pytest = "^7.4.2"
pytest-xdist = "^3.2.0"
ruff = "^0.0.290"
ssrq-cli = {git = "ssh://git@github.com/SSRQ-SDS-FDS/ssrq-cli.git", rev = "main"}
types-requests = "^2.31.0.1"

[tool.poetry.group.docs.dependencies]
mike = "^1.1.2"
mkdocs-material = "^9.4.2"
mkdocs-static-i18n = "^1.0"
pyuca = "^1.2"
snakemd = "^2.1.0"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.mypy]
files = ["utils/**/*.py"]

[tool.ruff]
ignore = ["E501"]
select = ["C90", "E", "F", "I001", "RET", "UP"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
