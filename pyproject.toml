[ssrq.schema.meta]
authors = [
    "Bastian Politycki <bastian.politycki@unisg.ch>",
    "Pascale Sutter <pascale.sutter@unisg.ch>",
    "Christian Sonder <christian.sonder@unisg.ch>",
]
schemas = [
    { title = "SLS TEI-Schema", description = "The main schema used by the Swiss Law Sources to validate TEI XML transcriptions", entry = "main.odd.xml", name = "TEI_Schema", version = "1.2.0", tei_version = "4.5.0" },
]

[tool.poetry]
authors = [
    "Bpolitycki <bastian.politycki@unisg.ch>",
    "ChristianSonderUniSG <christian.sonder@unisg.ch>",
]
description = "TEI-ODD schema for the Swiss Law Sources with Python based tooling."
include = [{ path = "src", format = ["sdist", "wheel"] }]
name = "ssrq-schema"
packages = [{ include = "utils" }]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
pydantic = "^2.8.2"
python = "^3.11"
requests = "^2.32.3"
saxonche = "^12.5.0"
saxonche-stubs = "^0.7.2"
semver = "^3.0.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
pre-commit = "^3.8.0"
pyschval = { git = "https://github.com/SSRQ-SDS-FDS/py-schematron-validator.git", rev = "main" }
pytest = "^8.3.2"
pytest-xdist = "^3.6.1"
ruff = "^0.6.4"
ssrq-cli = { git = "ssh://git@github.com/SSRQ-SDS-FDS/ssrq-cli.git", rev = "main" }
types-requests = "^2.32.0.20240712"

[tool.poetry.group.docs.dependencies]
mike = "^2.1.3"
mkdocs-material = "^9.5.33"
mkdocs-static-i18n = "1.2.3"
pyuca = "^1.2"
snakemd = "^2.2.0"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.mypy]
files = ["utils/**/*.py"]

[tool.ruff.lint]
ignore = ["E501"]
select = ["C90", "E", "F", "I001", "RET", "UP"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
