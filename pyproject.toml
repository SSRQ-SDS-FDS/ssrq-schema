[ssrq.schema.meta]
authors = ["Bastian Politycki <bastian.politycki@unisg.ch>", "Pascale Sutter <pascale.sutter@unisg.ch>"]
schemas = [{title="SSRQ Editionsrichtlinien", description = "The main schema used by the Swiss Law Sources to validate TEI XML transcriptions", entry = "main.odd.xml", name="TEI_Schema", version="0.0.1", tei_version="4.5.0"}]

[tool.poetry]
name = "ssrq-schema"
version = "0.1.0"
description = "TEI-ODD schema for the Swiss Law Sources with Python based tooling."
authors = ["Bpolitycki <bastian.politycki@unisg.ch>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
taskipy = "^1.10.3"
saxonche = "^12.0.0"
pydantic = "^1.10.5"
semver = "^2.13.0"
pip = "^23.0.1"
install = "^1.3.5"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
pytest = "^7.2.1"
ruff = "^0.0.252"
pyschval = {git = "https://github.com/SSRQ-SDS-FDS/py-schematron-validator.git", rev = "main"}
ssrq-cli = {git = "ssh://git@github.com/SSRQ-SDS-FDS/ssrq-cli.git", rev = "main"}

[tool.ruff]
select = ["E", "F", "I001"]
ignore = ["E501"]

[tool.taskipy.tasks]
fmt = "black ."
lint = "ruff --fix ."
test = "pytest"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
