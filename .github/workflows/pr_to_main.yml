name: test_and_release

on:
  pull_request:
    branches: ['main']
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11']

    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          persist-credentials: false
          token: ${{ secrets.TEI_VOLUMES_PAT }}
      - name: Setup SSH and Python with Poetry
        uses: ./.github/actions/setup
        with:
          ssh-key: ${{ secrets.CLI_SECRET_KEY }}
      - name: Setup xmllint
        uses: Bpolitycki/setup-xmllint-action@1.0.1
      - name: Install dependencies
        run: poetry install
      - name: Check the formatting of .py-files
        run: ./Taskfile fmt-check
      - name: Check the formatting of .xml-files
        run: ./Taskfile fmt-xml
      - name: Lint all .py-files
        run: ./Taskfile lint-only
      - name: Run all tests using pytest
        run: poetry run pytest -n auto

  publish:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PRE_COMMIT_ALLOW_NO_CONFIG: 1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.TEI_VOLUMES_PAT }}
      - name: Setup SSH and Python with Poetry
        uses: ./.github/actions/setup
        with:
          ssh-key: ${{ secrets.CLI_SECRET_KEY }}
      - name: Set docs-url
        run: |
          url=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')
          echo "DOCS_URL=${url}" >> "$GITHUB_ENV"
      - name: Build and publish
        uses: ./.github/actions/mike
        with:
          version-name: 'main'
